 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title>3.3.0 introduction</title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.htm)"> 
<!--html,4,png,sections+--> 
<meta name="src" content="fpdoc.tex"> 
<meta name="date" content="2003-05-30 22:38:00"> 
<link rel="stylesheet" type="text/css" href="fpdoc.css"> 
</head><body 
>
<div class="crosslinks"><p class="noindent">[<a 
href="#tailfpdocsu14.htm">tail</a>] [<a 
href="fpdocse8.htm#fpdocsu14.htm" >up</a>] </p></div>
<h4 class="subsectionHead"><a 
href="fpdoc.htm#QQ2-27-26" name="x27-260003.3">introduction</a></h4> The makeskel tool can be used to generate an empty description file for a unit. The
description file will contain an element node for each identifier in the interface section of the Pascal
unit.
<!--l. 502--><p class="noindent">It&#8217;s usage is quite straightforward: the name of an input file (one or more) must be specified (as for
<span 
class="cmcsc-10">FPD<small 
class="small-caps">O</small><small 
class="small-caps">C</small></span>), an output file, and the name of a package:
                                                                            

                                                                            
<table width="100%" 
class="verbatim"><tr class="verbatim"><td 
class="verbatim"><pre class="verbatim">
&nbsp;makeskel&nbsp;--package=rtl&nbsp;--input=crt.pp&nbsp;--output=crt.xml
</pre>
</td></tr></table>This will read the file <span 
class="cmss-10">crt.pp </span>and will create a file <span 
class="cmss-10">crt.xml </span>which contains empty nodes for all
identifiers found in <span 
class="cmss-10">crt.pp</span>, all in a package named <span 
class="cmtt-10">rtl</span>.
<!--l. 512--><p class="noindent">The <span 
class="cmtt-10">input </span>option can be given more than once, as for the <span 
class="cmss-10">fpdoc </span>command:
                                                                            

                                                                            
<table width="100%" 
class="verbatim"><tr class="verbatim"><td 
class="verbatim"><pre class="verbatim">
&nbsp;makeskel&nbsp;--input='-Sn&nbsp;system.pp'&nbsp;--input=crt.pp&nbsp;--output=rtl.xml
</pre>
</td></tr></table>As can be seen, the <span 
class="cmtt-10">input </span>option can contain some compiler options, as is the case for <span 
class="cmcsc-10">FPD<small 
class="small-caps">O</small><small 
class="small-caps">C</small></span>.
The above command will process the files <span 
class="cmss-10">system.pp </span>and <span 
class="cmtt-10">crt.pp</span>, and will create <span 
class="cmbx-10">element </span>tags for
the identifiers in both units in the file <span 
class="cmtt-10">rtl.xml</span>.
<!--l. 522--><p class="noindent">The output of <span 
class="cmss-10">makeskel </span>is a valid, empty description file. It will contain a <span 
class="cmbx-10">module </span>tag for
each unit specified, and each <span 
class="cmbx-10">module </span>will have <span 
class="cmbx-10">element </span>tags for each identifier in the
unit.
<!--l. 526--><p class="noindent">Each <span 
class="cmbx-10">element </span>tag will by default contain <span 
class="cmbx-10">short</span>, <span 
class="cmbx-10">descr</span>, <span 
class="cmbx-10">errors </span>and <span 
class="cmbx-10">seealso </span>tags, but this can be
customised.
                                                                            

                                                                            
<div class="crosslinks"><p class="noindent">[<a 
href="fpdocsu14.htm" >front</a>] [<a 
href="fpdocse8.htm#fpdocsu14.htm" >up</a>] </p></div><a 
  name="tailfpdocsu14.htm"></a>  
</body></html> 
