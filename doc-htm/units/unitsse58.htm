 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title>17.12 TStringCollection</title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.htm)"> 
<!--html,3,png,sections+--> 
<meta name="src" content="units.tex"> 
<meta name="date" content="2003-05-30 22:24:00"> 
<link rel="stylesheet" type="text/css" href="units.css"> 
</head><body 
>
<div class="crosslinks"><p class="noindent">[<a 
href="unitsse59.htm" >next</a>] [<a 
href="unitsse57.htm" >prev</a>] [<a 
href="unitsse57.htm#tailunitsse57.htm" >prev-tail</a>] [<a 
href="#tailunitsse58.htm">tail</a>] [<a 
href="unitsch17.htm#unitsse58.htm" >up</a>] </p></div>
<h3 class="sectionHead"><span class="titlemark">17.12</span> <a 
href="units.htm#QQ2-80-716" name="x80-71000017.12">TStringCollection</a></h3>
<!--l. 1933--><p class="noindent">The <span 
class="cmtt-10">TStringCollection </span>object manages a sorted collection of pascal strings. To this end, it
overrides the <span 
class="cmss-10">Compare </span>(<a 
href="unitsse57.htm#x79-70600017.11">614<!--tex4ht:ref: se:TBufStream--></a>) method of <span 
class="cmtt-10">TSortedCollection</span>, and it introduces methods to
read/write strings from a stream.
<!--l. 1939--><p class="noindent">Here is the full declaration of the <span 
class="cmtt-10">TStringCollection </span>object:
                                                                            

                                                                            
<table width="100%" 
class="verbatim"><tr class="verbatim"><td 
class="verbatim"><pre class="verbatim">
&nbsp;TYPE
&nbsp;&nbsp;&nbsp;&nbsp;TStringCollection&nbsp;=&nbsp;OBJECT&nbsp;(TSortedCollection)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Function&nbsp;GetItem&nbsp;(Var&nbsp;S:&nbsp;TStream):&nbsp;Pointer;&nbsp;Virtual;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Function&nbsp;Compare&nbsp;(Key1,&nbsp;Key2:&nbsp;Pointer):&nbsp;Sw_Integer;&nbsp;Virtual;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Procedure&nbsp;FreeItem&nbsp;(Item:&nbsp;Pointer);&nbsp;Virtual;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Procedure&nbsp;PutItem&nbsp;(Var&nbsp;S:&nbsp;TStream;&nbsp;Item:&nbsp;Pointer);&nbsp;Virtual;
&nbsp;&nbsp;&nbsp;&nbsp;END;
&nbsp;&nbsp;&nbsp;&nbsp;PStringCollection&nbsp;=&nbsp;^TStringCollection;
</pre>
</td></tr></table>
<h4 class="subsectionHead"><a 
href="unitsli1.htm#QQ2-80-717" name="x80-71100017.12">TStringCollection.GetItem</a></h4><a 
  name="dx80-711001"></a>
<dl class="list1"><dt class="list">
<span 
class="cmss-10">Declaration:</span> </dt><dd 
class="list"><span 
class="cmtt-10">Function TStringCollection.GetItem (Var S: TStream): Pointer; Virtual;</span>
</dd><dt class="list">
<span 
class="cmss-10">Description:</span> </dt><dd 
class="list"><span 
class="cmtt-10">GetItem </span>reads a string from the stream <span 
class="cmtt-10">S </span>and returns a pointer to it. It doesn&#8217;t insert the
string in the collection.
<!--l. 1958--><p class="noindent">This method is primarily introduced to be able to load and store the collection from and to
a stream.
</dd><dt class="list">
<span 
class="cmss-10">Errors:</span> </dt><dd 
class="list">The errors returned are those of <span 
class="cmss-10">TStream.ReadStr </span>(<a 
href="unitsse52.htm#x74-63700017.6">569<!--tex4ht:ref: se:TBufStream--></a>).
</dd><dt class="list">
<span 
class="cmss-10">See also:</span> </dt><dd 
class="list"><span 
class="cmss-10">PutItem </span>(<a 
href="#x80-71400017.12">621<!--tex4ht:ref: se:TBufStream--></a>)</dd></dl>
<h4 class="subsectionHead"><a 
href="unitsli1.htm#QQ2-80-718" name="x80-71200017.12">TStringCollection.Compare</a></h4><a 
  name="dx80-712001"></a>
<dl class="list1"><dt class="list">
<span 
class="cmss-10">Declaration:</span> </dt><dd 
class="list"><span 
class="cmtt-10">Function TStringCollection.Compare (Key1, Key2: Pointer): Sw</span>_<span 
class="cmtt-10">Integer;</span>
<span 
class="cmtt-10">Virtual;</span>
</dd><dt class="list">
<span 
class="cmss-10">Description:</span> </dt><dd 
class="list"><span 
class="cmtt-10">TStringCollection </span>overrides the <span 
class="cmtt-10">Compare </span>function so it compares the two keys as if they
were pointers to strings. The compare is done case sensitive. It returns the following
results:
    <dl class="description"><dt class="description">
<span 
class="cmbx-10">-1</span></dt><dd 
class="description">if the first string is alphabetically earlier than the second string.
    </dd><dt class="description">
<span 
class="cmbx-10">0</span></dt><dd 
class="description">if the two strings are equal.
    </dd><dt class="description">
<span 
class="cmbx-10">1</span></dt><dd 
class="description">if the first string is alphabetically later than the second string.</dd></dl>
</dd><dt class="list">
<span 
class="cmss-10">Errors:</span> </dt><dd 
class="list">None.
</dd><dt class="list">
<span 
class="cmss-10">See also:</span> </dt><dd 
class="list"><span 
class="cmss-10">TSortedCollection.Compare </span>(<a 
href="unitsse57.htm#x79-70600017.11">614<!--tex4ht:ref: se:TBufStream--></a>)</dd></dl>
                                                                            

                                                                            
<!--l. 1985--><p class="noindent"><span 
class="cmssbx-10">Listing: </span><span 
class="cmss-10">objectex/ex37.pp</span><HR/><div class="listinginput">
<!--l. 1985--><p class="noindent"><div class="obeylines-v">   <span 
class="cmtt-10">Program</span>&nbsp;<span 
class="cmtt-10">ex37;</span>
<br>
<br>   <span 
class="cmtt-10">{</span>&nbsp;<span 
class="cmtt-10">Program</span>&nbsp;<span 
class="cmtt-10">to</span>&nbsp;<span 
class="cmtt-10">demonstrate</span>&nbsp;<span 
class="cmtt-10">the</span>&nbsp;<span 
class="cmtt-10">TStringCollection.Compare</span>&nbsp;<span 
class="cmtt-10">method</span>&nbsp;<span 
class="cmtt-10">}</span>
<br>
<br>   <span 
class="cmtt-10">Uses</span>&nbsp;<span 
class="cmtt-10">Objects;</span>
<br>
<br>   <span 
class="cmtt-10">Var</span>&nbsp;<span 
class="cmtt-10">C</span>&nbsp;<span 
class="cmtt-10">:</span>&nbsp;<span 
class="cmtt-10">PStringCollection;</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">S</span>&nbsp;<span 
class="cmtt-10">:</span>&nbsp;<span 
class="cmtt-10">String;</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">I</span>&nbsp;<span 
class="cmtt-10">:</span>&nbsp;<span 
class="cmtt-10">longint;</span>
<br>
<br>   <span 
class="cmtt-10">begin</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">Randomize;</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">C:=New(PStringCollection,Init(120,10));</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">C^.Duplicates:=True;</span>&nbsp;<span 
class="cmtt-10">{</span>&nbsp;<span 
class="cmtt-10">Duplicates</span>&nbsp;<span 
class="cmtt-10">allowed</span>&nbsp;<span 
class="cmtt-10">}</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">Writeln</span>&nbsp;<span 
class="cmtt-10">('Inserting</span>&nbsp;<span 
class="cmtt-10">100</span>&nbsp;<span 
class="cmtt-10">records</span>&nbsp;<span 
class="cmtt-10">at</span>&nbsp;<span 
class="cmtt-10">random</span>&nbsp;<span 
class="cmtt-10">places.');</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">For</span>&nbsp;<span 
class="cmtt-10">I:=1</span>&nbsp;<span 
class="cmtt-10">to</span>&nbsp;<span 
class="cmtt-10">100</span>&nbsp;<span 
class="cmtt-10">do</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">begin</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">Str(Random(100),S);</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">S:='String</span>&nbsp;<span 
class="cmtt-10">with</span>&nbsp;<span 
class="cmtt-10">value</span>&nbsp;<span 
class="cmtt-10">'+S;</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">C^.Insert(NewStr(S));</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">end;</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">For</span>&nbsp;<span 
class="cmtt-10">I:=0</span>&nbsp;<span 
class="cmtt-10">to</span>&nbsp;<span 
class="cmtt-10">98</span>&nbsp;<span 
class="cmtt-10">do</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">With</span>&nbsp;<span 
class="cmtt-10">C^</span>&nbsp;<span 
class="cmtt-10">do</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">If</span>&nbsp;<span 
class="cmtt-10">Compare</span>&nbsp;<span 
class="cmtt-10">(At(i),At(I+1))=0</span>&nbsp;<span 
class="cmtt-10">then</span>
<br>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span 
class="cmtt-10">Writeln</span>&nbsp;<span 
class="cmtt-10">('Duplicate</span>&nbsp;<span 
class="cmtt-10">string</span>&nbsp;<span 
class="cmtt-10">found</span>&nbsp;<span 
class="cmtt-10">at</span>&nbsp;<span 
class="cmtt-10">position</span>&nbsp;<span 
class="cmtt-10">',i);</span>
<br>   &nbsp;&nbsp;<span 
class="cmtt-10">Dispose(C,Done);</span>
<br>   <span 
class="cmtt-10">end.</span>
</div></div><HR/>
<h4 class="subsectionHead"><a 
href="unitsli1.htm#QQ2-80-719" name="x80-71300017.12">TStringCollection.FreeItem</a></h4><a 
  name="dx80-713001"></a>
<dl class="list1"><dt class="list">
<span 
class="cmss-10">Declaration:</span> </dt><dd 
class="list"><span 
class="cmtt-10">Procedure TStringCollection.FreeItem (Item: Pointer); Virtual;</span>
</dd><dt class="list">
<span 
class="cmss-10">Description:</span> </dt><dd 
class="list"><span 
class="cmtt-10">TStringCollection </span>overrides <span 
class="cmtt-10">FreeItem </span>so that the string pointed to by <span 
class="cmtt-10">Item </span>is disposed
from memory.
</dd><dt class="list">
<span 
class="cmss-10">Errors:</span> </dt><dd 
class="list">None.
</dd><dt class="list">
<span 
class="cmss-10">See also:</span> </dt><dd 
class="list"><span 
class="cmss-10">TCollection.FreeItem </span>(<a 
href="unitsse56.htm#x78-69200017.10">605<!--tex4ht:ref: se:TBufStream--></a>)</dd></dl>
<h4 class="subsectionHead"><a 
href="unitsli1.htm#QQ2-80-720" name="x80-71400017.12">TStringCollection.PutItem</a></h4><a 
  name="dx80-714001"></a>
<dl class="list1"><dt class="list">
<span 
class="cmss-10">Declaration:</span> </dt><dd 
class="list"><span 
class="cmtt-10">Procedure TStringCollection.PutItem (Var S: TStream; Item: Pointer);</span>
<span 
class="cmtt-10">Virtual;</span>
                                                                            

                                                                            
</dd><dt class="list">
<span 
class="cmss-10">Description:</span> </dt><dd 
class="list"><span 
class="cmtt-10">PutItem </span>writes the string pointed to by <span 
class="cmtt-10">Item </span>to the stream <span 
class="cmtt-10">S</span>.
<!--l. 2007--><p class="noindent">This method is primarily used in the <span 
class="cmtt-10">Load </span>and <span 
class="cmtt-10">Store </span>methods, and should not be used
directly.
</dd><dt class="list">
<span 
class="cmss-10">Errors:</span> </dt><dd 
class="list">Errors are those of <span 
class="cmss-10">TStream.WriteStr </span>(<a 
href="unitsse52.htm#x74-64500017.6">572<!--tex4ht:ref: se:TBufStream--></a>).
</dd><dt class="list">
<span 
class="cmss-10">See also:</span> </dt><dd 
class="list"><span 
class="cmss-10">GetItem </span>(<a 
href="#x80-71100017.12">620<!--tex4ht:ref: se:TBufStream--></a>)</dd></dl>
                                                                            

                                                                            
<div class="crosslinks"><p class="noindent">[<a 
href="unitsse59.htm" >next</a>] [<a 
href="unitsse57.htm" >prev</a>] [<a 
href="unitsse57.htm#tailunitsse57.htm" >prev-tail</a>] [<a 
href="unitsse58.htm" >front</a>] [<a 
href="unitsch17.htm#unitsse58.htm" >up</a>] </p></div><a 
  name="tailunitsse58.htm"></a>   
</body></html> 
