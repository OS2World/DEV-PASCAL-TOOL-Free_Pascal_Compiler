<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<title>Reference for unit 'Classes': Classes</title>
<link rel="stylesheet" type="text/css" href="../fpdoc.css">
</head>
<body>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="bar">
<tr>
<td><b>[<a href="../classes/index.htm">Overview</a>][<a href="../classes/index-2.htm">Constants</a>][<a href="../classes/index-3.htm">Types</a>][Classes][<a href="../classes/index-5.htm">Procedures and functions</a>][<a href="../classes/index-6.htm">Variables</a>]</b></td>
<td align="right"><span class="bartitle">Reference for unit 'Classes' (<a href="../index.htm">#fcl</a>)</span></td>
</tr>
</table>
<h1>Reference for unit 'Classes': Classes</h1>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/ebitserror.htm">EBitsError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs in a method of <a href="../classes/tbits.htm">TBits</a>. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/eclassnotfound.htm">EClassNotFound</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an unknown class is referenced in a streamed component. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/ecomponenterror.htm">EComponentError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs in the component registration routines. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/efcreateerror.htm">EFCreateError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurred during creation of a <a href="../classes/tfilestream.htm">TFileStream</a> stream. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/efilererror.htm">EFilerError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised by the component streaming system if an error occurs. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/efopenerror.htm">EFOpenError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurred during creation of a <a href="../classes/tfilestream.htm">TFileStream</a></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/einvalidimage.htm">EInvalidImage</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when the resource header needed for streaming of a component is invalid. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/einvalidoperation.htm">EInvalidOperation</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an invalid operation is performed. Obsolete. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/elisterror.htm">EListError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs in lists handling. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/emethodnotfound.htm">EMethodNotFound</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">This exception is no longer used. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/eoutofresources.htm">EOutOfResources</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when the system is out of resources. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/eparsererror.htm">EParserError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs during the parsing of streams. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/ereaderror.htm">EReadError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised if an error occurs while reading from a stream. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/eresnotfound.htm">EResNotFound</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when a resource, needed to initialize a component, is not found. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/estreamerror.htm">EStreamError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs during read or write operations on a stream. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/estringlisterror.htm">EStringListError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs in a method of <a href="../classes/tstrings.htm">TStrings</a>. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/ethread.htm">EThread</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Thread error exception.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/ewriteerror.htm">EWriteError</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Exception raised when an error occurs during writing to a stream. </p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/iinterfacelist.htm">IInterfaceList</a></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/istreampersist.htm">IStreamPersist</a></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/istringsadapter.htm">IStringsAdapter</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">IStringsAdapter Interface declaration.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/iunknown.htm">IUnknown</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt"><var>IUnknown</var> Interface</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tabstractobjectreader.htm">TAbstractObjectReader</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract driver class to read stored component data.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tabstractobjectwriter.htm">TAbstractObjectWriter</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract driver class for writing component data.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tbasicaction.htm">TBasicAction</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract base class for all Actions.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tbasicactionlink.htm">TBasicActionLink</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Link between actions and action clients (e.g. controls)</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tbinaryobjectreader.htm">TBinaryObjectReader</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Driver class descendent which reads component data stored in binary format.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tbinaryobjectwriter.htm">TBinaryObjectWriter</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Driver class which stores component data in binary form.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tbits.htm">TBits</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class to store collections of bits (binary values that can be 0 or 1)</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tcollection.htm">TCollection</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base class to manage collections of named objects.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tcollectionitem.htm">TCollectionItem</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Basic object that is managed by a <a href="../classes/tcollection.htm">TCollection</a> class.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tcomponent.htm">TComponent</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base class for all components that need owner-owned functionality.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tcustommemorystream.htm">TCustomMemoryStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract stream that stores its data in memory.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tfiler.htm">TFiler</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class responsible for streaming of components.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tfilestream.htm">TFileStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Stream that stores its data in a named file on disk.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/thandlestream.htm">THandleStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base clas for streams that are identified by an OS handle.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tinterfacedpersistent.htm">TInterfacedPersistent</a></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tinterfacelist.htm">TInterfaceList</a></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tlist.htm">TList</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class to manage collections of pointers.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tmemorystream.htm">TMemoryStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Standard implementation of a stream that stores its data in memory</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tparser.htm">TParser</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class to parse the contents of a stream containing text data.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tpersistent.htm">TPersistent</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base class for streaming system and persistent properties.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/treader.htm">TReader</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Generic reader object which reads component data from any given source.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/trecall.htm">TRecall</a></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tresourcestream.htm">TResourceStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Stream that reads its data from a resource object.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tstream.htm">TStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base class for streams.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tstringlist.htm">TStringList</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Standard implementation of the <a href="../classes/tstrings.htm">TStrings</a> class.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tstrings.htm">TStrings</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class to manage arrays or collections of strings</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tstringstream.htm">TStringStream</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Stream that stores its data in a string.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/ttextobjectwriter.htm">TTextObjectWriter</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Driver class which stores component data in text format.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tthread.htm">TThread</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract Thread class.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/tthreadlist.htm">TThreadList</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Thread-safe list object (not yet implemented).</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr><a href="../classes/twriter.htm">TWriter</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Object to write component data to an arbitrary format.</p></td>
</tr>
</table>
</body>
</html>
