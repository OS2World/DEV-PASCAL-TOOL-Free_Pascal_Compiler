<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<title>TComponent</title>
<link rel="stylesheet" type="text/css" href="../fpdoc.css">
</head>
<body>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="bar">
<tr>
<td><b>[<a href="../classes/index.htm">Overview</a>][<a href="../classes/index-2.htm">Constants</a>][<a href="../classes/index-3.htm">Types</a>][<a href="../classes/index-4.htm">Classes</a>][<a href="../classes/index-5.htm">Procedures and functions</a>][<a href="../classes/index-6.htm">Variables</a>]</b></td>
<td align="right"><span class="bartitle">Reference for unit 'Classes' (<a href="../index.htm">#fcl</a>)</span></td>
</tr>
</table>
<h1>TComponent</h1>
<p>[<a href="../classes/tcomponent-1.htm" onClick="window.open('../classes/tcomponent-1.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Properties</a> (<a href="../classes/tcomponent-2.htm" onClick="window.open('../classes/tcomponent-2.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/tcomponent-3.htm" onClick="window.open('../classes/tcomponent-3.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Methods</a> (<a href="../classes/tcomponent-4.htm" onClick="window.open('../classes/tcomponent-4.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/tcomponent-5.htm" onClick="window.open('../classes/tcomponent-5.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Events</a> (<a href="../classes/tcomponent-6.htm" onClick="window.open('../classes/tcomponent-6.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] </p>
<p>Base class for all components that need owner-owned functionality.</p>
<h2>Declaration</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td><p><tt><nobr><span class="kw">type</span> TComponent <span class="sym">=</span> <span class="kw">class</span><span class="sym">(</span><a href="../classes/tpersistent.htm">TPersistent</a><span class="sym">)</span></nobr></tt></p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">protected</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<a href="../classes/tcomponent.fcomponentstyle.htm">FComponentStyle</a><span class="sym">: </span><a href="../classes/tcomponentstyle.htm">TComponentStyle</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Contains the component's style.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.changename.htm">ChangeName</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Actually sets the component name.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.defineproperties.htm">DefineProperties</a><span class="sym">();</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Defines fake top,left properties for handling in the IDE.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.getchildren.htm">GetChildren</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Must be overridden by descendents to return all child components that must be streamed.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.getchildowner.htm">GetChildOwner</a><span class="sym">;</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the owner of any children.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.getchildparent.htm">GetChildParent</a><span class="sym">;</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the parent of any children.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.getnamepath.htm">GetNamePath</a><span class="sym">;</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the name path of this component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.getowner.htm">GetOwner</a><span class="sym">;</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the owner of this component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.loaded.htm">Loaded</a><span class="sym">;</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Called when the component has finished loading.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.notification.htm">Notification</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Called by components that are freed and which received a FreeNotification.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.readstate.htm">ReadState</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Read the component's state from a stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.setancestor.htm">SetAncestor</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Sets the <var>csAncestor</var> state of the component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.setdesigning.htm">SetDesigning</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Sets the <var>csDesigning</var> state of the component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.setname.htm">SetName</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Write handler for <a href="../classes/tcomponent.name.htm">Name</a> property.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.setchildorder.htm">SetChildOrder</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Determines the order in which children are streamed/created.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.setparentcomponent.htm">SetParentComponent</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Set the parent component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.updating.htm">Updating</a><span class="sym">;</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Sets the state to <var>csUpdating</var></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.updated.htm">Updated</a><span class="sym">;</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Ends the <var>csUpdating</var> state.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.updateregistry.htm">UpdateRegistry</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">For compatibilty only.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.validaterename.htm">ValidateRename</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Called when a name change must be validated</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.validatecontainer.htm">ValidateContainer</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">??</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.validateinsert.htm">ValidateInsert</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Called when an insert must be validated.</p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">public</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.writestate.htm">WriteState</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Writes the component to a stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">constructor </span><a href="../classes/tcomponent.create.htm">Create</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Creates a new instance of the component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">destructor </span><a href="../classes/tcomponent.destroy.htm">Destroy</a><span class="sym">;</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Destroys the instance of the component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.destroycomponents.htm">DestroyComponents</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Destroy child components.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.destroying.htm">Destroying</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Called when the component is being destroyed</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.executeaction.htm">ExecuteAction</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.findcomponent.htm">FindComponent</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Finds and returns the named component in the owned components.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.freenotification.htm">FreeNotification</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Ask the component to notify called when it is being destroyed.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.removefreenotification.htm">RemoveFreeNotification</a><span class="sym">();</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.freeonrelease.htm">FreeOnRelease</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Part of the <var>IVCLComObject</var> interface.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.getparentcomponent.htm">GetParentComponent</a><span class="sym">;</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the parent component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.hasparent.htm">HasParent</a><span class="sym">;</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Does the component have a parent ?</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.insertcomponent.htm">InsertComponent</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Insert the given component in the list of owned components.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tcomponent.removecomponent.htm">RemoveComponent</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Remove the given component from the list of owned components.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.safecallexception.htm">SafeCallException</a><span class="sym">();</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Part of the <var>IVCLComObject</var> Interface.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tcomponent.updateaction.htm">UpdateAction</a><span class="sym">();</span><span class="kw"> dynamic</span><span class="sym">;</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.components.htm">Components</a><span class="sym">: </span><a href="../classes/tcomponent.htm">TComponent</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Indexed list (zero-based) of all owned components.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.componentcount.htm">ComponentCount</a><span class="sym">: </span>Integer<span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Count of owned components</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.componentindex.htm">ComponentIndex</a><span class="sym">: </span>Integer<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Index of component in it's owner's list.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.componentstate.htm">ComponentState</a><span class="sym">: </span><a href="../classes/tcomponentstate.htm">TComponentState</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Current component's state.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.componentstyle.htm">ComponentStyle</a><span class="sym">: </span><a href="../classes/tcomponentstyle.htm">TComponentStyle</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Current component's style.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.designinfo.htm">DesignInfo</a><span class="sym">: </span>LongInt<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Information for IDE designer.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.owner.htm">Owner</a><span class="sym">: </span><a href="../classes/tcomponent.htm">TComponent</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Owner of this component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.vclcomobject.htm">VCLComObject</a><span class="sym">: </span>Pointer<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Not implemented.</p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">published</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.name.htm">Name</a><span class="sym">: </span><a href="../classes/tcomponentname.htm">TComponentName</a><span class="sym">;</span>  [rws]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Name of the component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tcomponent.tag.htm">Tag</a><span class="sym">: </span>LongInt<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Tag value of the component.</p></td>
</tr>
<tr>
<td><p><tt><nobr> <span class="kw">end</span><span class="sym">;</span></nobr></tt></p></td>
</tr>
</table>
<h2>Inheritance</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top" align="center"><p><tt><nobr><a href="../classes/tcomponent.htm">TComponent</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base class for all components that need owner-owned functionality.</p></td>
</tr>
<tr>
<td align="center">|</td>
</tr>
<tr>
<td valign="top" align="center"><p><tt><nobr><a href="../classes/tpersistent.htm">TPersistent</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Base class for streaming system and persistent properties.</p></td>
</tr>
<tr>
<td align="center">|</td>
</tr>
<tr>
<td align="center"><p><tt><nobr>TObject</nobr></tt></p></td>
</tr>
</table>
<h2>Description</h2>
<p><var>TComponent</var> is the base class for any set of classes that needs owner-owned functionality, and which needs support for property streaming. All classes that should be handled by an IDE (Integrated Development  Environment) must descend from <var>TComponent</var>, as it includes all support for streaming all its published properties. </p>
<p>Components can 'own' other components. <var>TComponent</var> introduces methods for enumerating the child components. It also allows to name the owned components with a unique name. Furthermore, functionality for  sending notifications when a component is removed from the list or removed from memory alltogether is also introduced in <var>TComponent</var></p>
<p><var>TComponent</var> introduces a form of automatic memory management: When a component is destroyed, all its child components will be destroyed first. </p>
</body>
</html>
