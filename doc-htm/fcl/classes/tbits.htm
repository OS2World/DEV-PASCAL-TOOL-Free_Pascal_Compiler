<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<title>TBits</title>
<link rel="stylesheet" type="text/css" href="../fpdoc.css">
</head>
<body>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="bar">
<tr>
<td><b>[<a href="../classes/index.htm">Overview</a>][<a href="../classes/index-2.htm">Constants</a>][<a href="../classes/index-3.htm">Types</a>][<a href="../classes/index-4.htm">Classes</a>][<a href="../classes/index-5.htm">Procedures and functions</a>][<a href="../classes/index-6.htm">Variables</a>]</b></td>
<td align="right"><span class="bartitle">Reference for unit 'Classes' (<a href="../index.htm">#fcl</a>)</span></td>
</tr>
</table>
<h1>TBits</h1>
<p>[<a href="../classes/tbits-1.htm" onClick="window.open('../classes/tbits-1.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Properties</a> (<a href="../classes/tbits-2.htm" onClick="window.open('../classes/tbits-2.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/tbits-3.htm" onClick="window.open('../classes/tbits-3.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Methods</a> (<a href="../classes/tbits-4.htm" onClick="window.open('../classes/tbits-4.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/tbits-5.htm" onClick="window.open('../classes/tbits-5.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Events</a> (<a href="../classes/tbits-6.htm" onClick="window.open('../classes/tbits-6.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] </p>
<p>Class to store collections of bits (binary values that can be 0 or 1)</p>
<h2>Declaration</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td><p><tt><nobr><span class="kw">type</span> TBits <span class="sym">=</span> <span class="kw">class</span><span class="sym">(</span>TObject<span class="sym">)</span></nobr></tt></p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">public</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">constructor </span><a href="../classes/tbits.create.htm">Create</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Creates a new bits collection.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">destructor </span><a href="../classes/tbits.destroy.htm">Destroy</a><span class="sym">;</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Destroys a bit collection</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.getfsize.htm">GetFSize</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the number of records used to store the bits.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.seton.htm">SetOn</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Turn a  particular bit on.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.clear.htm">Clear</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Clears a particular bit.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.clearall.htm">Clearall</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Clears all bits in the array.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.andbits.htm">AndBits</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Performs an <var>and</var> operation on the bits.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.orbits.htm">OrBits</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Performs an <var>or</var> operation on the bits.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.xorbits.htm">XorBits</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Performs a <var>xor</var> operation on the bits.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.notbits.htm">NotBits</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Performs a <var>not</var> operation on the bits.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.get.htm">Get</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Retrieve the value of a particular bit</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.grow.htm">Grow</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Expands the bits array to the requested size.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.equals.htm">Equals</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Determines whether the bits of 2 arrays are equal.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tbits.setindex.htm">SetIndex</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Sets the start position for <a href="../classes/tbits.findnextbit.htm">FindNextBit</a> and <a href="../classes/tbits.findprevbit.htm">FindPrevBit</a></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.findfirstbit.htm">FindFirstBit</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Find first bit with a particular value</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.findnextbit.htm">FindNextBit</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Searches the next bit with a particular value.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.findprevbit.htm">FindPrevBit</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Searches the previous bit with a particular value.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tbits.openbit.htm">OpenBit</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the position of the first bit that is set to <var>False</var>.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tbits.bits.htm">Bits</a><span class="sym">: </span>Boolean<span class="sym">;</span><span class="kw"> default</span><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Access to all bits in the array.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tbits.size.htm">Size</a><span class="sym">: </span>LongInt<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Current size of the array of bits.</p></td>
</tr>
<tr>
<td><p><tt><nobr> <span class="kw">end</span><span class="sym">;</span></nobr></tt></p></td>
</tr>
</table>
<h2>Inheritance</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top" align="center"><p><tt><nobr><a href="../classes/tbits.htm">TBits</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class to store collections of bits (binary values that can be 0 or 1)</p></td>
</tr>
<tr>
<td align="center">|</td>
</tr>
<tr>
<td align="center"><p><tt><nobr>TObject</nobr></tt></p></td>
</tr>
</table>
<h2>Description</h2>
<p><var>TBits</var> can be used to store collections of bits in an indexed array. This is especially useful for storing collections of booleans: Normally the size of a boolean is the size of the smallest enumerated type, i.e. 1 byte. Since a bit can take 2 values it can be used to store a boolean as well. Since TBits can store 8 bits in a byte, it takes 8 times less space to store an array of booleans in a TBits class then it would take to stoe them in a conventional array. </p>
<p><var>TBits</var> introduces methods to store and retrieve bit values, apply masks, and search for bits.  </p>
</body>
</html>
