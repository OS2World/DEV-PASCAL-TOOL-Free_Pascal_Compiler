<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<title>TReader</title>
<link rel="stylesheet" type="text/css" href="../fpdoc.css">
</head>
<body>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="bar">
<tr>
<td><b>[<a href="../classes/index.htm">Overview</a>][<a href="../classes/index-2.htm">Constants</a>][<a href="../classes/index-3.htm">Types</a>][<a href="../classes/index-4.htm">Classes</a>][<a href="../classes/index-5.htm">Procedures and functions</a>][<a href="../classes/index-6.htm">Variables</a>]</b></td>
<td align="right"><span class="bartitle">Reference for unit 'Classes' (<a href="../index.htm">#fcl</a>)</span></td>
</tr>
</table>
<h1>TReader</h1>
<p>[<a href="../classes/treader-1.htm" onClick="window.open('../classes/treader-1.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Properties</a> (<a href="../classes/treader-2.htm" onClick="window.open('../classes/treader-2.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/treader-3.htm" onClick="window.open('../classes/treader-3.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Methods</a> (<a href="../classes/treader-4.htm" onClick="window.open('../classes/treader-4.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/treader-5.htm" onClick="window.open('../classes/treader-5.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Events</a> (<a href="../classes/treader-6.htm" onClick="window.open('../classes/treader-6.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] </p>
<p>Generic reader object which reads component data from any given source.</p>
<h2>Declaration</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td><p><tt><nobr><span class="kw">type</span> TReader <span class="sym">=</span> <span class="kw">class</span><span class="sym">(</span><a href="../classes/tfiler.htm">TFiler</a><span class="sym">)</span></nobr></tt></p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">protected</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.error.htm">Error</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Calls an installed error handler and passes it <var>Message</var></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.findmethod.htm">FindMethod</a><span class="sym">();</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Return the address of a published method.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readproperty.htm">ReadProperty</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Read and process a property name</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readpropvalue.htm">ReadPropValue</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a property value for <var>PropInfo</var>.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.propertyerror.htm">PropertyError</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Skips a property value and raises an exception.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readdata.htm">ReadData</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads the components data after it has been created.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.propname.htm">PropName</a><span class="sym">: </span>String<span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Name of the property being read at this moment.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.canhandleexceptions.htm">CanHandleExceptions</a><span class="sym">: </span>Boolean<span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Indicates whether the reader is handling exceptions at this stage.</p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">public</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">constructor </span><a href="../classes/treader.create.htm">Create</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Creates a new reader class</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">destructor </span><a href="../classes/treader.destroy.htm">Destroy</a><span class="sym">;</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Destroys a reader class.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.beginreferences.htm">BeginReferences</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Initializes the component referencing mechanism.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.checkvalue.htm">CheckValue</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Raises an exception if the next value in the stream is not of type <var>Value</var></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.defineproperty.htm">DefineProperty</a><span class="sym">();</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a user-defined property from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.definebinaryproperty.htm">DefineBinaryProperty</a><span class="sym">();</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a user-defined binary property from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.endoflist.htm">EndOfList</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns true if the stream contains an end-of-list marker.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.endreferences.htm">EndReferences</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Finalizes the component referencing mechanism.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.fixupreferences.htm">FixupReferences</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Tries to resolve all unresolved component references.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.nextvalue.htm">NextValue</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the type of the next value.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readboolean.htm">ReadBoolean</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a boolean from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readchar.htm">ReadChar</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a character from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readcollection.htm">ReadCollection</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a collection from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readcomponent.htm">ReadComponent</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Starts reading a component from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readcomponents.htm">ReadComponents</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Starts reading child components from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readfloat.htm">ReadFloat</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a float from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readsingle.htm">ReadSingle</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a single-type real from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readdate.htm">ReadDate</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a date from the stream</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readident.htm">ReadIdent</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads an identifier from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readinteger.htm">ReadInteger</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads an integer from the stream</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readint64.htm">ReadInt64</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a 64-bit integer from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readlistbegin.htm">ReadListBegin</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Checks for the beginning of a list.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.readlistend.htm">ReadListEnd</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Checks for the end of a list.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readrootcomponent.htm">ReadRootComponent</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Starts reading a root component.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readstring.htm">ReadString</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads a string from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/treader.readvalue.htm">ReadValue</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Reads the next value type from the stream.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/treader.copyvalue.htm">CopyValue</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Copy a value to a writer.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.driver.htm">Driver</a><span class="sym">: </span><a href="../classes/tabstractobjectreader.htm">TAbstractObjectReader</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">The driver in use for streaming the data.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.owner.htm">Owner</a><span class="sym">: </span><a href="../classes/tcomponent.htm">TComponent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Owner of the component being read</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.parent.htm">Parent</a><span class="sym">: </span><a href="../classes/tcomponent.htm">TComponent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Parent of the component being read.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.onerror.htm">OnError</a><span class="sym">: </span><a href="../classes/treadererror.htm">TReaderError</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler called when an error occurs.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.onfindmethod.htm">OnFindMethod</a><span class="sym">: </span><a href="../classes/tfindmethodevent.htm">TFindMethodEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler to find or change a method address.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.onsetname.htm">OnSetName</a><span class="sym">: </span><a href="../classes/tsetnameevent.htm">TSetNameEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler called when setting a component name.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.onreferencename.htm">OnReferenceName</a><span class="sym">: </span><a href="../classes/treferencenameevent.htm">TReferenceNameEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler called when another component is referenced.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.onancestornotfound.htm">OnAncestorNotFound</a><span class="sym">: </span><a href="../classes/tancestornotfoundevent.htm">TAncestorNotFoundEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler called when the ancestor component cannot be found.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.oncreatecomponent.htm">OnCreateComponent</a><span class="sym">: </span><a href="../classes/tcreatecomponentevent.htm">TCreateComponentEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler called when a component needs to be created.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/treader.onfindcomponentclass.htm">OnFindComponentClass</a><span class="sym">: </span><a href="../classes/tfindcomponentclassevent.htm">TFindComponentClassEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Handler called when a component class reference needs to be found.</p></td>
</tr>
<tr>
<td><p><tt><nobr> <span class="kw">end</span><span class="sym">;</span></nobr></tt></p></td>
</tr>
</table>
<h2>Inheritance</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top" align="center"><p><tt><nobr><a href="../classes/treader.htm">TReader</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Generic reader object which reads component data from any given source.</p></td>
</tr>
<tr>
<td align="center">|</td>
</tr>
<tr>
<td valign="top" align="center"><p><tt><nobr><a href="../classes/tfiler.htm">TFiler</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class responsible for streaming of components.</p></td>
</tr>
<tr>
<td align="center">|</td>
</tr>
<tr>
<td align="center"><p><tt><nobr>TObject</nobr></tt></p></td>
</tr>
</table>
<h2>Description</h2>
<p>The <var>TReader</var> class is a reader class that implements generic component streaming capabilities, independent of the format of the data in the stream. It uses a driver class <a href="../classes/tabstractobjectreader.htm">TAbstractObjectReader</a> to do the actual reading of data. The interface of the <var>TReader</var> class should be identical to the interface in Delphi. </p>
<h2>See also</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top"><p><a href="../classes/tfiler.htm">TFiler</a></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Class responsible for streaming of components.</p></td>
</tr>
<tr>
<td valign="top"><p><a href="../classes/twriter.htm">TWriter</a></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Object to write component data to an arbitrary format.</p></td>
</tr>
<tr>
<td valign="top"><p><a href="../classes/tabstractobjectreader.htm">TAbstractObjectReader</a></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract driver class to read stored component data.</p></td>
</tr>
</table>
</body>
</html>
