<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso8859-1">
<title>TThread</title>
<link rel="stylesheet" type="text/css" href="../fpdoc.css">
</head>
<body>
<table cellpadding="4" cellspacing="0" border="0" width="100%" class="bar">
<tr>
<td><b>[<a href="../classes/index.htm">Overview</a>][<a href="../classes/index-2.htm">Constants</a>][<a href="../classes/index-3.htm">Types</a>][<a href="../classes/index-4.htm">Classes</a>][<a href="../classes/index-5.htm">Procedures and functions</a>][<a href="../classes/index-6.htm">Variables</a>]</b></td>
<td align="right"><span class="bartitle">Reference for unit 'Classes' (<a href="../index.htm">#fcl</a>)</span></td>
</tr>
</table>
<h1>TThread</h1>
<p>[<a href="../classes/tthread-1.htm" onClick="window.open('../classes/tthread-1.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Properties</a> (<a href="../classes/tthread-2.htm" onClick="window.open('../classes/tthread-2.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/tthread-3.htm" onClick="window.open('../classes/tthread-3.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Methods</a> (<a href="../classes/tthread-4.htm" onClick="window.open('../classes/tthread-4.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] [<a href="../classes/tthread-5.htm" onClick="window.open('../classes/tthread-5.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">Events</a> (<a href="../classes/tthread-6.htm" onClick="window.open('../classes/tthread-6.htm', 'list', 'dependent=yes,resizable=yes,scrollbars=yes,height=400,width=300'); return false;">by Name</a>)] </p>
<p>Abstract Thread class.</p>
<h2>Declaration</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td><p><tt><nobr><span class="kw">type</span> TThread <span class="sym">=</span> <span class="kw">class</span></nobr></tt></p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">protected</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tthread.doterminate.htm">DoTerminate</a><span class="sym">;</span><span class="kw"> virtual</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Terminates the thread.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tthread.execute.htm">Execute</a><span class="sym">;</span><span class="kw"> virtual</span><span class="sym">;</span><span class="kw"> abstract</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Execute method. Should be overridden in a descendent thread.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tthread.synchronize.htm">Synchronize</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Synchronizes the thread by executing the method in the main thread.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.returnvalue.htm">ReturnValue</a><span class="sym">: </span>Integer<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Return value of the thread when it stops executing.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.terminated.htm">Terminated</a><span class="sym">: </span>Boolean<span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Indicates whether the <a href="../classes/tthread.terminate.htm">Terminate</a>method was called by the user.</p></td>
</tr>
<tr>
<td><p><tt><nobr><span class="kw">public</span></nobr></tt></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<a href="../classes/tthread.fstackpointer.htm">FStackPointer</a><span class="sym">: </span>Integer<span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt"></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<a href="../classes/tthread.fstacksize.htm">FStackSize</a><span class="sym">: </span>Integer<span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt"></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<a href="../classes/tthread.fcallexitprocess.htm">FCallExitProcess</a><span class="sym">: </span>Boolean<span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt"></p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">constructor </span><a href="../classes/tthread.create.htm">Create</a><span class="sym">();</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Creates a new thread.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">destructor </span><a href="../classes/tthread.destroy.htm">Destroy</a><span class="sym">;</span><span class="kw"> override</span><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Destroys the thread object.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tthread.resume.htm">Resume</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Resumes the thread's execution.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tthread.suspend.htm">Suspend</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Suspends the thread's execution.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">procedure </span><a href="../classes/tthread.terminate.htm">Terminate</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Signals the thread it should terminate.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">function </span><a href="../classes/tthread.waitfor.htm">WaitFor</a><span class="sym">;</span></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Waits for the thread to terminate and returns the exit status.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.freeonterminate.htm">FreeOnTerminate</a><span class="sym">: </span>Boolean<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Indicates whether the thread should free itself when it stops executing.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.handle.htm">Handle</a><span class="sym">: </span><a href="../classes/thandle.htm">THANDLE</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the thread handle.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.priority.htm">Priority</a><span class="sym">: </span><a href="../classes/tthreadpriority.htm">TThreadPriority</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the thread priority.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.suspended.htm">Suspended</a><span class="sym">: </span>Boolean<span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Indicates whether the thread is suspended.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.threadid.htm">ThreadID</a><span class="sym">: </span><a href="../classes/thandle.htm">THANDLE</a><span class="sym">;</span>  [r]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Returns the thread ID.</p></td>
</tr>
<tr>
<td valign="top"><p><tt><nobr>&nbsp;&nbsp;<span class="kw">property </span><a href="../classes/tthread.onterminate.htm">OnTerminate</a><span class="sym">: </span><a href="../classes/tnotifyevent.htm">TNotifyEvent</a><span class="sym">;</span>  [rw]</nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Event called when the thread terminates.</p></td>
</tr>
<tr>
<td><p><tt><nobr> <span class="kw">end</span><span class="sym">;</span></nobr></tt></p></td>
</tr>
</table>
<h2>Inheritance</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top" align="center"><p><tt><nobr><a href="../classes/tthread.htm">TThread</a></nobr></tt></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Abstract Thread class.</p></td>
</tr>
<tr>
<td align="center">|</td>
</tr>
<tr>
<td align="center"><p><tt><nobr>TObject</nobr></tt></p></td>
</tr>
</table>
<h2>Description</h2>
<p>The <var>TThread</var> class encapsulates the native thread support of the operating system. To create a thread, declare a descendent of the <var>TThread</var> object and override the <a href="../classes/tthread.execute.htm">Execute</a> method. In this method, the thhread's code should be executed. To run a thread, create an instance of the tthread descendent, and call it's execute method. </p>
<h2>See also</h2>
<table cellspacing="0" cellpadding="0">
<tr>
<td valign="top"><p><a href="../classes/ethread.htm">EThread</a></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Thread error exception.</p></td>
</tr>
<tr>
<td valign="top"><p><a href="../classes/tthread.execute.htm">TThread.Execute</a></p></td>
<td><p>&nbsp;&nbsp;</p></td>
<td><p class="cmt">Execute method. Should be overridden in a descendent thread.</p></td>
</tr>
</table>
</body>
</html>
