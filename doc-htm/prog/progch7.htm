 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title>7 Linking issues</title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.htm)"> 
<!--html,4,png,sections+--> 
<meta name="src" content="prog.tex"> 
<meta name="date" content="2003-05-30 22:37:00"> 
<link rel="stylesheet" type="text/css" href="prog.css"> 
</head><body 
>
<div class="crosslinks"><p class="noindent">[<a 
href="progch8.htm" >next</a>] [<a 
href="progch6.htm" >prev</a>] [<a 
href="progch6.htm#tailprogch6.htm" >prev-tail</a>] [<a 
href="#tailprogch7.htm">tail</a>] [<a 
href="prog.htm#progch7.htm" >up</a>] </p></div>
<h2 class="chapterHead"><span class="titlemark">Chapter&nbsp;7</span><br><a 
href="prog.htm#QQ2-126-131" name="x126-1230007">Linking issues</a></h2> When you only use Pascal code, and Pascal units, then you
will not see much of the part that the linker plays in creating your executable. The
linker is only called when you compile a program. When compiling units, the linker isn&#8217;t
invoked.
<!--l. 2834--><p class="noindent">However, there are times that linking to C libraries, or to external object files created by other
compilers may be necessary. The Free Pascal compiler can generate calls to a C function, and can
generate functions that can be called from C (exported functions).
<div class="sectionTOCS">
<br>&nbsp;<span class="sectionToc">7.1 <a 
href="progse25.htm#x127-1240007.1" name="QQ2-127-132">Using external code and variables</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu87.htm#x128-1250007.1" name="QQ2-128-133">Declaring external functions or procedures</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu88.htm#x129-1260007.1" name="QQ2-129-134">Declaring external variables</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu89.htm#x130-1270007.1" name="QQ2-130-135">Declaring the calling convention modifier</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu90.htm#x131-1280007.1" name="QQ2-131-136">Declaring the external object code</a></span>
<br>&nbsp;<span class="sectionToc">7.2 <a 
href="progse26.htm#x132-1310007.2" name="QQ2-132-139">Making libraries</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu91.htm#x133-1320007.2" name="QQ2-133-140">Exporting functions</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu92.htm#x134-1330007.2" name="QQ2-134-141">Exporting variables</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu93.htm#x135-1340007.2" name="QQ2-135-142">Compiling libraries</a></span>
<br>&nbsp;&nbsp;<span class="subsectionToc"> <a 
href="progsu94.htm#x136-1350007.2" name="QQ2-136-143">Unit searching strategy</a></span>
<br>&nbsp;<span class="sectionToc">7.3 <a 
href="progse27.htm#x137-1360007.3" name="QQ2-137-144">Using smart linking</a></span>
</div>


                                                                            

                                                                            
<div class="crosslinks"><p class="noindent">[<a 
href="progch8.htm" >next</a>] [<a 
href="progch6.htm" >prev</a>] [<a 
href="progch6.htm#tailprogch6.htm" >prev-tail</a>] [<a 
href="progch7.htm" >front</a>] [<a 
href="prog.htm#progch7.htm" >up</a>] </p></div><a 
  name="tailprogch7.htm"></a>  
</body></html> 
