 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title>9.2 Operator declarations</title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.htm)"> 
<!--html,4,png,sections+--> 
<meta name="src" content="ref.tex"> 
<meta name="date" content="2003-05-30 22:25:00"> 
<link rel="stylesheet" type="text/css" href="ref.css"> 
</head><body 
>
<div class="crosslinks"><p class="noindent">[<a 
href="refse47.htm" >next</a>] [<a 
href="refse45.htm" >prev</a>] [<a 
href="refse45.htm#tailrefse45.htm" >prev-tail</a>] [<a 
href="#tailrefse46.htm">tail</a>] [<a 
href="refch9.htm#refse46.htm" >up</a>] </p></div>
<h3 class="sectionHead"><span class="titlemark">9.2</span> <a 
href="ref.htm#QQ2-115-136" name="x115-1210009.2">Operator declarations</a></h3>
<!--l. 3755--><p class="noindent">To define the action of an operator is much like defining a function:
     <div class="quote">
     <!--l. 1--><p class="noindent">_________________________________________________________________________________________________________
     <span 
class="cmbx-10">Operator definitions</span>
     <BR/>
     <img 
src="ref123x.png" alt="-- operator definition-operator--|-assignment operator definition--
                           |-arithmetic operator definition|
                           -comparision operator definition--
--|result identifier--:- result type-;-subroutine block-------------------
  ---------------
     " ><BR/>
     <BR/>
     <img 
src="ref124x.png" alt="-- assignment operator definition := -( -value parameter )----------------
     " ><BR/>
     <BR/>
     <img 
src="ref125x.png" alt="-- arithmetic operator definition---+ ---(- parameter list-)----------------
                          -----|
                          --* -|
                          |-/ -|
                          - ** --
     " ><BR/>
     <BR/>
     <img 
src="ref126x.png" alt="-- comparision operator definition--- =---(- parameter list- )---------------
                            - &lt;-|
                            -&lt;= |
                            | &gt;-|
                            -&gt;= -
     " ><BR/>
     ___________________________________________________________________</div>
<!--l. 3757--><p class="noindent">The parameter list for a comparision operator or an arithmetic operator must always contain 2
parameters. The result type of the comparision operator must be <span 
class="cmtt-10">Boolean</span>.
<!--l. 3761--><p class="noindent"><span 
class="cmbx-10">Remark:</span> When compiling in <span 
class="cmtt-10">Delphi </span>mode or <span 
class="cmtt-10">Objfpc </span>mode, the result identifier may be dropped. The result
can then be accessed through the standard <span 
class="cmtt-10">Result </span>symbol.
<!--l. 3766--><p class="noindent">If the result identifier is dropped and the compiler is not in one of these modes, a syntax error will
occur.
The statement block contains the necessary statements to determine the result of the operation. It
can contain arbitrary large pieces of code; it is executed whenever the operation is encountered in
some expression. The result of the statement block must always be defined; error conditions are not
                                                                            

                                                                            
checked by the compiler, and the code must take care of all possible cases, throwing a run-time
error if some error condition is encountered.
<!--l. 3777--><p class="noindent">In the following, the three types of operator definitions will be examined. As an example,
throughout this chapter the following type will be used to define overloaded operators on
:
                                                                            

                                                                            
<table width="100%" 
class="verbatim"><tr class="verbatim"><td 
class="verbatim"><pre class="verbatim">
&nbsp;type
&nbsp;&nbsp;&nbsp;complex&nbsp;=&nbsp;record
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;re&nbsp;:&nbsp;real;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;im&nbsp;:&nbsp;real;
&nbsp;&nbsp;&nbsp;end;
</pre>
</td></tr></table>this type will be used in all examples.
<!--l. 3789--><p class="noindent">The sources of the Run-Time Library contain a unit <span 
class="cmss-10">ucomplex</span>, which contains a complete calculus
for complex numbers, based on operator overloading.
                                                                            

                                                                            
<div class="crosslinks"><p class="noindent">[<a 
href="refse47.htm" >next</a>] [<a 
href="refse45.htm" >prev</a>] [<a 
href="refse45.htm#tailrefse45.htm" >prev-tail</a>] [<a 
href="refse46.htm" >front</a>] [<a 
href="refch9.htm#refse46.htm" >up</a>] </p></div><a 
  name="tailrefse46.htm"></a>  
</body></html> 
