 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  
  "http://www.w3.org/TR/html4/loose.dtd">  
<html > 
<head><title>5.1 Using the command-line options</title> 
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> 
<meta name="generator" content="TeX4ht (http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.htm)"> 
<!--html,3,png,sections+--> 
<meta name="src" content="user.tex"> 
<meta name="date" content="2003-05-30 22:18:00"> 
<link rel="stylesheet" type="text/css" href="user.css"> 
</head><body 
>
<div class="crosslinks"><p class="noindent">[<a 
href="userse18.htm" >next</a>] [<a 
href="#tailuserse17.htm">tail</a>] [<a 
href="userch5.htm#userse17.htm" >up</a>] </p></div>
<h3 class="sectionHead"><span class="titlemark">5.1</span> <a 
href="user.htm#QQ2-24-44" name="x24-420005.1">Using the command-line options</a></h3>
<!--l. 919--><p class="noindent">The available options for version 1.0.6 of the compiler are listed by category (see appendix A for a
listing as generated by the compiler):
                                                                            

                                                                            
<h4 class="subsectionHead"><a 
href="userli1.htm#QQ2-24-45" name="x24-430005.1">General options</a></h4>
     <dl class="description"><dt class="description">
<span 
class="cmbx-10">-h</span> </dt><dd 
class="description">if you specify this option, the compiler outputs a list of all options, and exits after that.
     </dd><dt class="description">
<span 
class="cmbx-10">-?</span> </dt><dd 
class="description">idem as <span 
class="cmtt-10">-h</span>, waiting after every screenfull for the enter key.
     </dd><dt class="description">
<span 
class="cmbx-10">-i</span> </dt><dd 
class="description">This option tells the compiler to print the copyright information. You can give it an option, as
     <span 
class="cmtt-10">-ixxx </span>where xxx can be one of the following:
         <dl class="description"><dt class="description">
     <span 
class="cmbx-10">D</span> </dt><dd 
class="description">: Returns the compiler date.
         </dd><dt class="description">
     <span 
class="cmbx-10">V</span> </dt><dd 
class="description">: Returns the compiler version.
         </dd><dt class="description">
     <span 
class="cmbx-10">SO</span> </dt><dd 
class="description">: Returns the compiler OS.
         </dd><dt class="description">
     <span 
class="cmbx-10">SP</span> </dt><dd 
class="description">: Returns the compiler processor.
         </dd><dt class="description">
     <span 
class="cmbx-10">TO</span> </dt><dd 
class="description">: Returns the target OS.
         </dd><dt class="description">
     <span 
class="cmbx-10">TP</span> </dt><dd 
class="description">: Returns the target Processor.</dd></dl>
     </dd><dt class="description">
<span 
class="cmbx-10">-l</span> </dt><dd 
class="description">This option tells the compiler to print the Free Pascal logo on standard output. It also gives you
     the Free Pascal version number.
     </dd><dt class="description">
<span 
class="cmbx-10">-n</span> </dt><dd 
class="description">Tells the compiler not to read default the configuration file. You can still pass a configuration
     file with the <span 
class="cmtt-10">@ </span>option. </dd></dl>
<h4 class="subsectionHead"><a 
href="userli1.htm#QQ2-24-46" name="x24-440005.1">Options for getting feedback</a></h4>
     <dl class="description"><dt class="description">
<span 
class="cmbx-10">-vxxx</span> </dt><dd 
class="description">Be verbose. <span 
class="cmtt-10">xxx </span>is a combination of the following :
         <ul class="itemize1">
         <li class="itemize"><span 
class="cmtt-10">e </span>: Tells the compiler to show only errors. This option is on by default.
         </li>
         <li class="itemize"><span 
class="cmtt-10">i </span>: Tells the compiler to show some general information.
         </li>
         <li class="itemize"><span 
class="cmtt-10">w </span>: Tells the compiler to issue warnings.
         </li>
         <li class="itemize"><span 
class="cmtt-10">n </span>: Tells the compiler to issue notes.
         </li>
         <li class="itemize"><span 
class="cmtt-10">h </span>: Tells the compiler to issue hints.
         </li>
         <li class="itemize"><span 
class="cmtt-10">l </span>: Tells the compiler to show the line numbers as it processes a file. Numbers are
         shown per 100.
                                                                            

                                                                            
         </li>
         <li class="itemize"><span 
class="cmtt-10">u </span>: Tells the compiler to print information on the units it loads.
         </li>
         <li class="itemize"><span 
class="cmtt-10">t </span>: Tells the compiler to print the names of the files it tries to open.
         </li>
         <li class="itemize"><span 
class="cmtt-10">p </span>: Tells the compiler to print the names of procedures and functions as it is
         processing them.
         </li>
         <li class="itemize"><span 
class="cmtt-10">c </span>: Tells the compiler to warn you when it processes a conditional.
         </li>
         <li class="itemize"><span 
class="cmtt-10">m </span>: Tells the compiler to write which macros are defined.
         </li>
         <li class="itemize"><span 
class="cmtt-10">d </span>: Tells the compiler to write other debugging info.
         </li>
         <li class="itemize"><span 
class="cmtt-10">a </span>: Tells the compiler to write all possible info. (this is the same as specifying all
         options)
         </li>
         <li class="itemize"><span 
class="cmtt-10">0 </span>: Tells the compiler to write no messages. This is useful when you want to
         override the default setting in the configuration file.
         </li>
         <li class="itemize"><span 
class="cmtt-10">b </span>: Tells the compiler to show all procedure declarations if an overloaded function
         error occurs.
         </li>
         <li class="itemize"><span 
class="cmtt-10">x </span>: Tells the compiler to output some executable info (for Win32 platform only).
         </li>
         <li class="itemize"><span 
class="cmtt-10">r </span>: Rhide/GCC compatibility mode: formats the errors differently, so they are
         understood by RHIDE.</li></ul>
     </dd></dl>
<h4 class="subsectionHead"><a 
href="userli1.htm#QQ2-24-47" name="x24-450005.1">Options concerning files and directories</a></h4>
     <dl class="description"><dt class="description">
<span 
class="cmbx-10">-exxx</span> </dt><dd 
class="description"><span 
class="cmss-10">xxx  </span>specifies  the  directory  where  the  compiler  can  find  the  executables  <span 
class="cmss-10">as  </span>(the
     assembler) and <span 
class="cmss-10">ld </span>(the linker).
     </dd><dt class="description">
<span 
class="cmbx-10">-FD</span> </dt><dd 
class="description">same as <span 
class="cmtt-10">-e</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-Fexxx</span> </dt><dd 
class="description">This option tells the compiler to write errors, etc. to the file named <span 
class="cmss-10">xxx</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-FExxx</span> </dt><dd 
class="description">tells the compiler to write the executable and units in directory <span 
class="cmss-10">xxx </span>instead of th
     current directory.
     </dd><dt class="description">
<span 
class="cmbx-10">-Fixxx</span> </dt><dd 
class="description">Adds <span 
class="cmtt-10">xxx </span>to the include file search path.
     </dd><dt class="description">
<span 
class="cmbx-10">-Flxxx</span> </dt><dd 
class="description">Adds <span 
class="cmtt-10">xxx </span>to the library searching path, and is passed to the linker.
                                                                            

                                                                            
     </dd><dt class="description">
<span 
class="cmbx-10">-FLxxx</span> </dt><dd 
class="description">(<span 
class="cmcsc-10"><small 
class="small-caps">L</small><small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small><small 
class="small-caps">X</small> </span>only) Tells the compiler to use <span 
class="cmss-10">xxx </span>as the dynamic linker. Default this is
     <span 
class="cmss-10">/lib/ld-linux.so.2</span>, or <span 
class="cmss-10">/Hlib/ld-linux.so.1</span>, depending on which one is found first.
     </dd><dt class="description">
<span 
class="cmbx-10">-Foxxx</span> </dt><dd 
class="description">Adds <span 
class="cmss-10">xxx </span>to the object file search path. This path is used when looking for files that
     need to be linked in.
     </dd><dt class="description">
<span 
class="cmbx-10">-Frxxx</span> </dt><dd 
class="description"><span 
class="cmss-10">xxx </span>specifies the file which contain the compiler messages. Default the compiler has
     built-in messages. Specifying this option will override the default messages.
     </dd><dt class="description">
<span 
class="cmbx-10">-Fuxxx</span> </dt><dd 
class="description">Add <span 
class="cmss-10">xxx </span>to the unit search path. Units are first searched in the current directory. If
     they are not found there then the compiler searches them in the unit path. You must
     <span 
class="cmti-10">always </span>supply the path to the system unit.
     </dd><dt class="description">
<span 
class="cmbx-10">-FUxxx</span> </dt><dd 
class="description">Tells the compiler to write units in directory <span 
class="cmtt-10">xxx </span>instead of the current directory.
     It overrides the <span 
class="cmtt-10">-FE </span>option.
     </dd><dt class="description">
<span 
class="cmbx-10">-Ixxx</span> </dt><dd 
class="description"> Add <span 
class="cmss-10">xxx </span>to the include file search path. This option has the same effect as <span 
class="cmtt-10">-Fi</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-P</span> </dt><dd 
class="description">uses pipes instead of files when assembling. This may speed up the compiler on <span 
class="cmcsc-10"><small 
class="small-caps">O</small><small 
class="small-caps">S</small>/2</span>
     and <span 
class="cmcsc-10"><small 
class="small-caps">L</small><small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small><small 
class="small-caps">X</small></span>. Only with assemblers (such as <span 
class="cmcsc-10"><small 
class="small-caps">G</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small> </span><span 
class="cmss-10">as</span>) that support piping...</dd></dl>
<h4 class="subsectionHead"><a 
href="userli1.htm#QQ2-24-48" name="x24-460005.1">Options controlling the kind of output.</a></h4> for more information on these options, see also
<a 
href="file:../prog/prog.htm" >Programmers guide</a>
     <dl class="description"><dt class="description">
<span 
class="cmbx-10">-a</span> </dt><dd 
class="description"> Tells the compiler not to delete the assembler files it generates (not when using the
     internal assembler). This also counts for the (possibly) generated batch script.
     </dd><dt class="description">
<span 
class="cmbx-10">-al</span> </dt><dd 
class="description"> Tells the compiler to include the sourcecode lines in the assembler file as comments.
     </dd><dt class="description">
<span 
class="cmbx-10">-ar</span> </dt><dd 
class="description"> tells the compiler to list register allocation and release info in the assembler file. This
     is primarily intended for debugging the code generated by the compiler.
     </dd><dt class="description">
<span 
class="cmbx-10">-at</span> </dt><dd 
class="description"> tells the compiler to list information about temporary allocations and deallocations in
     the assembler file.
     </dd><dt class="description">
<span 
class="cmbx-10">-Axxx</span> </dt><dd 
class="description"> specifies what kind of assembler should be generated . Here <span 
class="cmtt-10">xxx </span>is one of the following
     :
         <dl class="description"><dt class="description">
     <span 
class="cmbx-10">as</span> </dt><dd 
class="description">assemble using <span 
class="cmcsc-10"><small 
class="small-caps">G</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small> </span>as.
         </dd><dt class="description">
     <span 
class="cmbx-10">asaout</span> </dt><dd 
class="description">assemble using <span 
class="cmcsc-10"><small 
class="small-caps">G</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small> </span>as for aout (Go32v1).
         </dd><dt class="description">
     <span 
class="cmbx-10">nasmcoff</span> </dt><dd 
class="description">coff (Go32v2) file using Nasm.
                                                                            

                                                                            
         </dd><dt class="description">
     <span 
class="cmbx-10">nasmelf</span> </dt><dd 
class="description">elf32 (Linux) file using Nasm.
         </dd><dt class="description">
     <span 
class="cmbx-10">nasmobj</span> </dt><dd 
class="description">object file using Nasm.
         </dd><dt class="description">
     <span 
class="cmbx-10">masm</span> </dt><dd 
class="description">object file using Masm (Microsoft).
         </dd><dt class="description">
     <span 
class="cmbx-10">tasm</span> </dt><dd 
class="description">object file using Tasm (Borland).
         </dd><dt class="description">
     <span 
class="cmbx-10">coff</span> </dt><dd 
class="description">coff object file (Go32v2) using the internal binary object writer.
         </dd><dt class="description">
     <span 
class="cmbx-10">pecoff</span> </dt><dd 
class="description">pecoff object file (Win32) using the internal binary object writer.</dd></dl>
     </dd><dt class="description">
<span 
class="cmbx-10">-B</span> </dt><dd 
class="description"> tells the compiler to re-compile all used units, even if the unit sources didn&#8217;t change since the
     last compilation.
     </dd><dt class="description">
<span 
class="cmbx-10">-b</span> </dt><dd 
class="description"> tells the compiler to generate browser info. This information can be used by an Integrated
     Development Environment (IDE) to provide information on classes, objects, procedures,
     types and variables in a unit.
     </dd><dt class="description">
<span 
class="cmbx-10">-bl</span> </dt><dd 
class="description"> is the same as <span 
class="cmtt-10">-b </span>but also generates information about local variables, types and
     procedures.
     </dd><dt class="description">
<span 
class="cmbx-10">-CD</span> </dt><dd 
class="description">Create a dynamic library. This is used to transform units into dynamically linkable libraries
     on <span 
class="cmcsc-10"><small 
class="small-caps">L</small><small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small><small 
class="small-caps">X</small></span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-Chxxx</span> </dt><dd 
class="description"> Reserves <span 
class="cmtt-10">xxx </span>bytes heap. <span 
class="cmtt-10">xxx </span>should be between 1024 and 67107840.
     </dd><dt class="description">
<span 
class="cmbx-10">-Ci</span> </dt><dd 
class="description"> Generate Input/Output checking code. In case some input/output code of your program
     returns an error status, the program will exit with a run-time error. Which error is generated
     depends on the I/O error.
     </dd><dt class="description">
<span 
class="cmbx-10">-Cn</span> </dt><dd 
class="description"> Omit the linking stage.
     </dd><dt class="description">
<span 
class="cmbx-10">-Co</span> </dt><dd 
class="description"> Generate Integer overflow checking code. In case of integer errors, a run-time error will be
     generated by your program.
     </dd><dt class="description">
<span 
class="cmbx-10">-Cr</span> </dt><dd 
class="description"> Generate Range checking code. In case your program acesses an array element with an invalid
     index, or if it increases an enumerated type beyond it&#8217;s scope, a run-time error will be
     generated.
     </dd><dt class="description">
<span 
class="cmbx-10">-CR</span> </dt><dd 
class="description"> Generate checks when calling methods to verify if the virtual method table for that object is
     valid.
     </dd><dt class="description">
<span 
class="cmbx-10">-Csxxx</span> </dt><dd 
class="description"> Set stack size to <span 
class="cmtt-10">xxx</span>.
                                                                            

                                                                            
     </dd><dt class="description">
<span 
class="cmbx-10">-Ct</span> </dt><dd 
class="description"> generate stack checking code. In case your program performs a faulty stack operation, a
     run-rime error will be generated.
     </dd><dt class="description">
<span 
class="cmbx-10">-CX</span> </dt><dd 
class="description"> Create a smartlinked unit when writing a unit. smartlinking will only link in the code parts
     that are actually needed by the program. All unused code is left out. This can lead to
     substantially smaller binaries.
     </dd><dt class="description">
<span 
class="cmbx-10">-dxxx</span> </dt><dd 
class="description"> Define the symbol name <span 
class="cmtt-10">xxx</span>. This can be used to conditionally compile parts of your
     code.
     </dd><dt class="description">
 </dt><dd 
class="description">-E Same as <span 
class="cmtt-10">-Cn</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-g</span> </dt><dd 
class="description"> Generate debugging information for debugging with <span 
class="cmss-10">gdb</span>
     </dd><dt class="description">
<span 
class="cmbx-10">-gg</span> </dt><dd 
class="description">idem as <span 
class="cmtt-10">-g</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-gd</span> </dt><dd 
class="description"> generate debugging info for <span 
class="cmss-10">dbx</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-gh</span> </dt><dd 
class="description">use the heaptrc unit (see <a 
href="file:../units/units.htm" >Unit reference</a>). (produces a report about heap usage after the
     program exits)
     </dd><dt class="description">
<span 
class="cmbx-10">-gl</span> </dt><dd 
class="description">use the lineinfo unit (see <a 
href="file:../units/units.htm" >Unit reference</a>). (produces file name/line number information if the
     program exits due to an error.)
     </dd><dt class="description">
<span 
class="cmbx-10">-gc</span> </dt><dd 
class="description">generate checks for pointers. This must be used with the <span 
class="cmtt-10">-gh </span>command-line option.
     When this options is enabled, it will verify that all pointer accesses are within the
     heap.
     </dd><dt class="description">
<span 
class="cmbx-10">-kxxx</span> </dt><dd 
class="description">pass <span 
class="cmtt-10">xxx </span>to the linker.
     </dd><dt class="description">
<span 
class="cmbx-10">-Oxxx</span> </dt><dd 
class="description"> optimize the compiler&#8217;s output; <span 
class="cmtt-10">xxx </span>can have one of the following values :
         <dl class="description"><dt class="description">
     <span 
class="cmbx-10">g</span> </dt><dd 
class="description">optimize for size, try to generate smaller code.
         </dd><dt class="description">
     <span 
class="cmbx-10">G</span> </dt><dd 
class="description">optimize for time, try to generate faster code (default).
         </dd><dt class="description">
     <span 
class="cmbx-10">r</span> </dt><dd 
class="description">keep certain variables in registers (experimental, use with caution).
         </dd><dt class="description">
     <span 
class="cmbx-10">u</span> </dt><dd 
class="description">Uncertain optimizations
         </dd><dt class="description">
     <span 
class="cmbx-10">1</span> </dt><dd 
class="description">Level 1 optimizations (quick optimizations).
         </dd><dt class="description">
     <span 
class="cmbx-10">2</span> </dt><dd 
class="description">Level 2 optimizations (<span 
class="cmtt-10">-O1 </span>plus some slower optimizations).
                                                                            

                                                                            
         </dd><dt class="description">
     <span 
class="cmbx-10">3</span> </dt><dd 
class="description">Level 3 optimizations (<span 
class="cmtt-10">-O2 </span>plus <span 
class="cmtt-10">-Ou</span>).
         </dd><dt class="description">
     <span 
class="cmbx-10">Pn</span> </dt><dd 
class="description">(Intel only) Specify processor: <span 
class="cmtt-10">n </span>can be one of
             <dl class="description"><dt class="description">
         <span 
class="cmbx-10">1</span> </dt><dd 
class="description">optimize for 386/486
             </dd><dt class="description">
         <span 
class="cmbx-10">2</span> </dt><dd 
class="description">optimize for Pentium/PentiumMMX (tm)
             </dd><dt class="description">
         <span 
class="cmbx-10">3</span> </dt><dd 
class="description">optimizations for PentiumPro/PII/Cyrix 6x86/K6 (tm)</dd></dl>
         </dd></dl>
     <!--l. 1124--><p class="noindent">The exact effect of these effects can be found in the <a 
href="file:../prog/prog.htm" >Programmers guide</a>.
     </dd><dt class="description">
<span 
class="cmbx-10">-oxxx</span> </dt><dd 
class="description">Tells the compiler to use <span 
class="cmtt-10">xxx </span>as the name of the output file (executable). Only with
     programs.
     </dd><dt class="description">
<span 
class="cmbx-10">-pg</span> </dt><dd 
class="description"> Generate profiler code for <span 
class="cmss-10">gprof</span>. This will define the symbol <span 
class="cmtt-10">FPC</span>_<span 
class="cmtt-10">PROFILE</span>, which can be used
     in conditional defines.
     </dd><dt class="description">
<span 
class="cmbx-10">-s</span> </dt><dd 
class="description"> Tells the compiler not to call the assembler and linker. Instead, the compiler writes a script,
     <span 
class="cmss-10">PPAS.BAT </span>under <span 
class="cmcsc-10"><small 
class="small-caps">D</small><small 
class="small-caps">O</small><small 
class="small-caps">S</small></span>, or <span 
class="cmss-10">ppas.sh </span>under <span 
class="cmcsc-10"><small 
class="small-caps">L</small><small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small><small 
class="small-caps">X</small></span>, which can then be executed to produce an
     executable. This can be used to speed up the compiling process or to debug the compiler&#8217;s
     output.
     </dd><dt class="description">
<span 
class="cmbx-10">-Txxx</span> </dt><dd 
class="description"> Specifies the target operating system. <span 
class="cmtt-10">xxx </span>can be one of the following:
         <ul class="itemize1">
         <li class="itemize"><span 
class="cmbx-10">GO32V1  </span>:  <span 
class="cmcsc-10"><small 
class="small-caps">D</small><small 
class="small-caps">O</small><small 
class="small-caps">S</small>  </span>and  version  1  of  the  DJ  DELORIE  extender  (no  longer
         maintained).
         </li>
         <li class="itemize"><span 
class="cmbx-10">GO32V2 </span>: <span 
class="cmcsc-10"><small 
class="small-caps">D</small><small 
class="small-caps">O</small><small 
class="small-caps">S</small> </span>and version 2 of the DJ DELORIE extender.
         </li>
         <li class="itemize"><span 
class="cmbx-10">LINUX </span>: <span 
class="cmcsc-10"><small 
class="small-caps">L</small><small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small><small 
class="small-caps">X</small></span>.
         </li>
         <li class="itemize"><span 
class="cmbx-10">OS2 </span>: OS/2 (2.x) using the <span 
class="cmtt-10">EMX </span>extender.
         </li>
         <li class="itemize"><span 
class="cmbx-10">WIN32 </span>: <span 
class="cmcsc-10">W<small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">D</small><small 
class="small-caps">O</small><small 
class="small-caps">W</small><small 
class="small-caps">S</small> </span>32 bit.
         </li>
         <li class="itemize"><span 
class="cmbx-10">SUNOS </span>: SunOS/Solaris.
         </li>
         <li class="itemize"><span 
class="cmbx-10">BEOS </span>: BeOS.</li></ul>
     </dd><dt class="description">
<span 
class="cmbx-10">-uxxx</span> </dt><dd 
class="description"> Undefine the symbol <span 
class="cmtt-10">xxx</span>. This is the opposite of the <span 
class="cmtt-10">-d </span>option.
     </dd><dt class="description">
<span 
class="cmbx-10">-Ur</span> </dt><dd 
class="description"> Generate release unit files. These files will not be recompiled, even when the sources are
     available. This is useful when making release distributions. This also overrides the <span 
class="cmtt-10">-B </span>option
     for release mode units.
                                                                            

                                                                            
     </dd><dt class="description">
<span 
class="cmbx-10">-Xx</span> </dt><dd 
class="description"> executable options. This tells the compiler what kind of executable should be generated. the
     parameter <span 
class="cmtt-10">x </span>can be one of the following:
         <ul class="itemize1">
         <li class="itemize"><span 
class="cmbx-10">c </span>: (<span 
class="cmcsc-10"><small 
class="small-caps">L</small><small 
class="small-caps">I</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small><small 
class="small-caps">X</small> </span>only) Link with the C library. You should only use this when you start
         to port Free Pascal to another operating system.
         </li>
         <li class="itemize"><span 
class="cmbx-10">D </span>: Link with dynamic libraries (defines the <span 
class="cmtt-10">FPC</span>_<span 
class="cmtt-10">LINK</span>_<span 
class="cmtt-10">DYNAMIC </span>symbol)
         </li>
         <li class="itemize"><span 
class="cmbx-10">s </span>: Strip the symbols from the executable.
         </li>
         <li class="itemize"><span 
class="cmbx-10">S </span>: Link with static units (defines the <span 
class="cmtt-10">FPC</span>_<span 
class="cmtt-10">LINK</span>_<span 
class="cmtt-10">STATIC </span>symbol)
         </li>
         <li class="itemize"><span 
class="cmbx-10">X </span>: Link with smartlinked units (defines the <span 
class="cmtt-10">FPC</span>_<span 
class="cmtt-10">LINK</span>_<span 
class="cmtt-10">SMART </span>symbol) </li></ul>
     </dd></dl>
<h4 class="subsectionHead"><a 
href="userli1.htm#QQ2-24-49" name="x24-470005.1">Options concerning the sources (language options)</a></h4> for more information on these options, see also
<a 
href="file:../prog/prog.htm" >Programmers guide</a>
     <dl class="description"><dt class="description">
<span 
class="cmbx-10">-Rxxx</span> </dt><dd 
class="description"> Specifies what kind of assembler you use in your <span 
class="cmtt-10">asm </span>assembler code blocks. Here <span 
class="cmtt-10">xxx </span>is
     one of the following:
         <dl class="description"><dt class="description">
     <span 
class="cmbx-10">att</span>&nbsp; </dt><dd 
class="description"><span 
class="cmtt-10">asm </span>blocks contain AT&amp;T-style assembler. This is the default style.
         </dd><dt class="description">
     <span 
class="cmbx-10">intel</span> </dt><dd 
class="description"><span 
class="cmtt-10">asm </span>blocks contain Intel-style assembler.
         </dd><dt class="description">
     <span 
class="cmbx-10">direct</span> </dt><dd 
class="description"><span 
class="cmtt-10">asm </span>blocks should be copied as-is in the assembler, only replacing certain
         variables. file.</dd></dl>
     </dd><dt class="description">
<span 
class="cmbx-10">-S2</span> </dt><dd 
class="description"> Switch on Delphi 2 extensions (<span 
class="cmtt-10">objfpc </span>mode). This is different from <span 
class="cmtt-10">-Sd </span>(Delphi mode)
     because some Free Pascal constructs are still available.
     </dd><dt class="description">
<span 
class="cmbx-10">-Sa</span> </dt><dd 
class="description"> Include assert statements in compiled code. Omitting this option will cause assert statements
     to be ignored.
     </dd><dt class="description">
<span 
class="cmbx-10">-Sc</span> </dt><dd 
class="description"> Support C-style operators, i.e. <span 
class="cmtt-10">*=, +=, /= and -=</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-Sd</span> </dt><dd 
class="description">Tells the compiler to be Delphi compatible. This is more strict than the <span 
class="cmtt-10">-S2 </span>option, since
     some <span 
class="cmtt-10">fpc </span>extensions are switched off.
     </dd><dt class="description">
<span 
class="cmbx-10">-SeN</span> </dt><dd 
class="description"> The compiler stops after the N-th error. Normally, the compiler tries to continue compiling
     after an error, until 50 errors are reached, or a fatal error is reached, and then it stops. With
     this switch, the compiler will stop after the N-th error (if N is omitted, a default of 1 is
     assumed).
                                                                            

                                                                            
     </dd><dt class="description">
<span 
class="cmbx-10">-Sg</span> </dt><dd 
class="description"> Support the <span 
class="cmtt-10">label </span>and <span 
class="cmtt-10">goto </span>commands. By default these are not supported. You must also
     specify this option if you use labels in assembler statements. (if you use the <span 
class="cmtt-10">AT&amp;T </span>style
     assember)
     </dd><dt class="description">
<span 
class="cmbx-10">-Sh</span> </dt><dd 
class="description">Use ansistrings by default for strings. If this keyword is specified, the compiler will interpret
     the <span 
class="cmtt-10">string </span>keyword as a ansistring. Otherwise it is supposed to be a short strings (TP
     style).
     </dd><dt class="description">
<span 
class="cmbx-10">-Si</span> </dt><dd 
class="description"> Support <span 
class="cmtt-10">C++ </span>style INLINE.
     </dd><dt class="description">
<span 
class="cmbx-10">-Sm</span> </dt><dd 
class="description"> Support C-style macros.
     </dd><dt class="description">
<span 
class="cmbx-10">-So</span> </dt><dd 
class="description"> Try to be Borland TP 7.0 compatible (no function overloading etc.).
     </dd><dt class="description">
<span 
class="cmbx-10">-Sp</span> </dt><dd 
class="description"> Try to be <span 
class="cmss-10">gpc </span>(<span 
class="cmcsc-10"><small 
class="small-caps">G</small><small 
class="small-caps">N</small><small 
class="small-caps">U</small> </span>pascal compiler) compatible.
     </dd><dt class="description">
<span 
class="cmbx-10">-Ss</span> </dt><dd 
class="description"> The name of constructors must be <span 
class="cmtt-10">init</span>, and the name of destructors should be
     <span 
class="cmtt-10">done</span>.
     </dd><dt class="description">
<span 
class="cmbx-10">-St</span> </dt><dd 
class="description"> Allow the <span 
class="cmtt-10">static </span>keyword in objects.
     </dd><dt class="description">
<span 
class="cmbx-10">-Un</span> </dt><dd 
class="description"> Do not check the unit name. Normally, the unit name is the same as the filename. This
     option allows both to be different.
     </dd><dt class="description">
<span 
class="cmbx-10">-Us</span> </dt><dd 
class="description"> Compile a system unit. This option causes the compiler to define only some very basic
     types.</dd></dl>
                                                                            

                                                                            
<div class="crosslinks"><p class="noindent">[<a 
href="userse18.htm" >next</a>] [<a 
href="userse17.htm" >front</a>] [<a 
href="userch5.htm#userse17.htm" >up</a>] </p></div><a 
  name="tailuserse17.htm"></a>   
</body></html> 
